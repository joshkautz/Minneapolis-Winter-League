# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

# Reference:
# "Deploy to Firebase Hosting" GitHub Action: https://github.com/marketplace/actions/deploy-to-firebase-hosting

name: Deploy to Testing

on: pull_request

permissions: write-all

jobs:
  App:
    name: Deploy to Firebase Hosting
    if: github.event.pull_request.head.repo.full_name == github.repository
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Set Node version
        uses: actions/setup-node@v5
        with:
          node-version: 22

      - name: Install dependencies
        working-directory: ./App
        run: npm install

      - name: Format App
        working-directory: ./App
        run: npm run format:check

      - name: Lint App
        working-directory: ./App
        run: npm run lint:check

      - name: Build App
        working-directory: ./App
        run: npm run build

      - name: Deploy to Firebase Hosting Preview Channel.
        env:
          GCP_SA_KEY: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_MINNESOTA_WINTER_LEAGUE }}
        run: |
          # Install Firebase Tools.
          npm install -g firebase-tools

          echo "$GCP_SA_KEY" > /opt/gcp_key.json
          export GOOGLE_APPLICATION_CREDENTIALS=/opt/gcp_key.json

          # Deploy to Firebase Hosting Preview Channel.
          DATE=$(date +'%A-%m-%d-%Y-%H-%M-%S')
          CHANNEL="Preview-"$DATE
          DEPLOYMENT_OUTPUT=$(firebase hosting:channel:deploy $CHANNEL --expires 1d --json)

          # Prepare Firebase Hosting Preview Channel URL for GitHub environment file.
          PREVIEW_CHANNEL_URL=$(echo "$DEPLOYMENT_OUTPUT" | grep -E -o '(http|https)://[a-zA-Z0-9./?=_%:-]*.web.app')
          echo "PREVIEW_CHANNEL_URL=$PREVIEW_CHANNEL_URL" >> $GITHUB_ENV

      - name: Comment Firebase Hosting Preview Channel URL on GitHub Pull Request.
        env:
          PREVIEW_CHANNEL_URL: ${{ env.PREVIEW_CHANNEL_URL }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_PR: ${{ github.event.pull_request.number }}
        run: |
          # Use GitHub CLI to comment the new Firebase Hosting Preview Channel URL.
          gh pr comment $GITHUB_PR --body "Here is your Preview Channel URL: $PREVIEW_CHANNEL_URL"

      - name: Add Firebase Hosting Preview Channel URL to API Key restrictions
        env:
          GCP_SA_KEY: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_MINNESOTA_WINTER_LEAGUE }}
          PROJECT_NUMBER: 756702616854
          KEY_ID: 38baec1a-f61c-481e-a9d4-d0ddaba7cbb8
        run: |
          # Install Firebase Tools.
          npm install -g firebase-tools

          echo "$GCP_SA_KEY" > /opt/gcp_key.json
          export GOOGLE_APPLICATION_CREDENTIALS=/opt/gcp_key.json

          # Add default referrers.
          allowedReferrers="localhost mplswinterleague.com www.mplswinterleague.com minnesota-winter-league.firebaseapp.com minnesota-winter-league.web.app"
          echo $allowedReferrers

          # Add preview channels.
          validChannels=$(firebase hosting:channel:list --json | jq -r '.result.channels[].url')
          validChannels=$(for i in ${validChannels}; do echo "$(basename $i) " ; done;)

          for i in ${validChannels}
          do
            add=true
            for j in ${allowedReferrers}
            do
              if [ "$i" = "$j" ]
              then
                echo "$i already exists in allowedReferrers"
                add=false
                break
              fi
            done
            if [ "$add" = true ]
            then
              echo "Adding $i to allowedReferrers"
              allowedReferrers+=" $i"
            fi
          done

          # Format data for gcurl.
          allowedReferrers=$(for i in ${allowedReferrers}; do echo "\"$i\","; done;)
          allowedReferrers=${allowedReferrers::-1}
          echo $allowedReferrers

          # Install Google's OAuth Tool.
          wget https://storage.googleapis.com/oauth2l/latest/linux_amd64.tgz
          tar -xvzf linux_amd64.tgz

          # Create gcurl command.
          shopt -s expand_aliases
          alias gcurl='curl -H "$(./linux_amd64/oauth2l header --json /opt/gcp_key.json cloud-platform userinfo.email)" -H "Content-Type: application/json"'

          # Update Google API Key website restrictions.
          gcurl https://apikeys.googleapis.com/v2/projects/${PROJECT_NUMBER}/locations/global/keys/${KEY_ID}?updateMask=restrictions --request PATCH --data '{ "restrictions" : { "browserKeyRestrictions" : { "allowedReferrers" : [ '"$allowedReferrers"' ]}}}'

  Functions:
    name: Deploy to Firebase Functions
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Set Node version
        uses: actions/setup-node@v5
        with:
          node-version: 22

      - name: Install dependencies
        working-directory: ./Functions
        run: npm install

      - name: Format Functions
        working-directory: ./Functions
        run: npm run format:check

      - name: Lint Functions
        working-directory: ./Functions
        run: npm run lint:check

      - name: Build Functions
        working-directory: ./Functions
        run: npm run build
